private static void readFromFile(String fromFileName) {
        File file = new File(fromFileName);
        List<String> strings = null;
        try {
            strings = Files.readAllLines(file.toPath());
        } catch (IOException e) {
            throw new RuntimeException("Can`t read file", e);
        }
    }

    private void countData(int supply, int buy, List<String> strings) {
        String[] res = strings.toArray(new String[strings.size()]);
        for (String a: res) {
            String[] temporary = a.split(",");
            if (temporary[0].equals("supply")) {
                supply += Integer.valueOf(temporary[1]);;
            } else if (temporary[0].equals("buy")) {
                buy += Integer.valueOf(temporary[1]);
            }
        }
    }

    private String createReport(int supply, int buy) {
                StringBuilder builder = new StringBuilder();
        result += supply - buy;
        builder.append(SUPPLY).append(COMMA_SEPARATOR).append(supply)
                .append(System.lineSeparator()).append(BUY).append(COMMA_SEPARATOR)
                .append(buy).append(System.lineSeparator())
                .append(RESULT).append(COMMA_SEPARATOR)
                .append(result).append(System.lineSeparator());
        String report = builder.toString();
        return report;
    }

    private void writeToFile(String fileName, String report) {

        File fileOne = new File(fileName);
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(fileOne, true));) {
            writer.write(report);
        } catch (IOException e) {
            throw new RuntimeException("Can`t write file...", e);
        }
    }

    public void getStatistic(String fromFileName, String toFileName) {
        readFromFile(fromFileName);
        writeToFile(toFileName, createReport(supply, buy));
    }